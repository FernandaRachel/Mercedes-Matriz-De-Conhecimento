@model Mercedes_Matriz_de_Conhecimento.tblWorkzone

@{
    ViewBag.Title = "Matriz";
    ViewBag.Cols = 0;
}

@section Scripts{

    <script>



        function openModalTrain(idTrain, idFuncionario) {

            $.ajax({
                url: '@Url.Action("BuscarITem", "Matrix")',
                data: {
                    idTrain: idTrain,
                    idFuncionario: idFuncionario,
                }
            }).done(function (response) {
                var x = document.getElementById('listTraining');
                x.innerHTML = response;
                $("#itemID").selectpicker();
                $('#treinamento').modal('show');

            });
        }
        function hide() {
            $('#alocacao').show();

        }
        function openModalActiv(idActivity, idFuncionario, alocacaoForcada) {
            console.log(alocacaoForcada);

            $.ajax({
                url: '@Url.Action("BuscarItemAtiv", "Matrix")',
                data: {
                    idActivity: idActivity,
                    idFuncionario: idFuncionario,
                }
            }).done(function (response) {
                var x = document.getElementById('listActivity');
                x.innerHTML = response;
                $("#itemAtivID").selectpicker();
                $('#atividade').modal('show');
                // verifica se é alocacao forçada
                // se for ele exibe o TextArea
                if (alocacaoForcada == true) {
                    alocacao.style.display = "block";
                } else {
                    alocacao.style.display = "none";
                }

            });
        }

        function SaveMatrizTraining(idFuncionario, idTraining) {
            var itemID = document.getElementById("itemID");
            var idWorkzone = document.getElementById("idWorkzone");

            location.href = '@Url.Action("CreateMatrizTraining", "Matrix")?idItem='
                + itemID.value + "&idFuncionario=" + idFuncionario + "&idTraining=" + idTraining
            + "&idWorkzone=" + idWorkzone.value;

        }

        function DeleteMatrizTraining(idFuncionario, idTraining) {
            var idWorkzone = document.getElementById("idWorkzone");

            location.href = '@Url.Action("DeleteMatrizTraining", "Matrix")?idFuncionario='
                + idFuncionario + "&idTraining=" + idTraining
            + "&idWorkzone=" + idWorkzone.value;

            $.ajax({
                url: '@Url.Action("DeleteMatrizTraining", "Matrix")',
                data: {
                    idFuncionario: idFuncionario,
                    idTraining: idTraining,
                    idWorkzone: idWorkzone.value
                }
            }).done(function (response) {
                $('#atividade').modal();
                console.log(response);
                //location.reload();
            });
        }

        function SaveMatrizActivity(idFuncionario, idActivity, alocacaoFrocadaValue) {
            var alocacaoValue = "";
            if (alocacaoFrocadaValue == undefined) {
                alocacaoForcada = document.getElementById("alocacaoForcada");
            }
            var itemID = document.getElementById("itemAtivID");
            var idWorkzone = document.getElementById("idWorkzone");
            var cor = document.getElementById('' + idFuncionario + "," + idActivity);
            var corValue = "";

            location.href = '@Url.Action("CreateMatrizActivity", "Matrix")?idItem='
                + itemID.value + "&idFuncionario=" + idFuncionario + "&idActivity=" + idActivity
            + "&idWorkzone=" + idWorkzone.value + "&cor=" + corValue + "&alocacaoForcada=" + alocacaoForcada.value;
        }


        function DeleteMatrizActivity(idFuncionario, idActivity) {
            var idWorkzone = document.getElementById("idWorkzone");

            location.href = '@Url.Action("DeleteMatrizActivity", "Matrix")?idFuncionario='
                + idFuncionario + "&idActivity=" + idActivity
          + "&idWorkzone=" + idWorkzone.value;

        }

        function salvarMatriz(idWorkzone) {

            location.href = '@Url.Action("SalvarHistorico", "Matrix")?idWorkzone='
                + idWorkzone;

        }
    </script>
}


@* temp *@

<div id="matriz">

    <h2 class="text-center">@Model.Nome - BU: @Model.idBU.Trim()</h2>
    @Html.HiddenFor(w => w.IdWorkzone, new { id = "idWorkzone" })
    <table class="table table-bordered">
        <thead>
            <tr>
                <th colspan="3" class="no-border"></th>
                <th colspan="@ViewBag.tListCount" class="table-title">Perfil</th>
                <th colspan="@ViewBag.activiesCount" class="table-title">Tarefas</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th colspan="3" class="white-border"></th>
                @foreach (var tt in (IEnumerable<tblTipoTreinamento>)ViewBag.ttList)
                {
                    var x = (IEnumerable<tblTreinamento>)ViewBag.trainingList;
                    var xlength = x.Where(t => t.idTipoTreinamento == tt.IdTipoTreinamento).Count();
                    <th colspan="@xlength" class="text-style">@tt.Nome</th>
                }

                @foreach (var a in (IEnumerable<tblAtividades>)ViewBag.activiesList)
            {
                    <th class="text-style">@a.Sigla</th>
                }


            </tr>
            <tr>
                <th>Registro</th>
                <th>Nome</th>
                <th>BU</th>
                @* COMEÇA A PREENCHER AS COLUNAS EQUIVALENTES AOS NOMES DOS TREINAMENTOS *@
                @foreach (var t in (IEnumerable<tblTreinamento>)ViewBag.trainingList)
            {
                    <th class="rotate">
                        <div>
                            <div class="rotation-wrapper-outer">
                                <div class="rotation-wrapper-inner">
                                    <span>@t.Nome</span>
                                </div>
                            </div>
                        </div>
                    </th>
                }
                @* ----------------------------------------------------------- *@

                @* COMEÇA A PREENCHER AS COLUNAS EQUIVALENTES AOS NOMES DAS ATIVIDADES*@
                @foreach (var a in (IEnumerable<tblAtividades>)ViewBag.activiesList)
            {
                    <th class="rotate">
                        <div>
                            <div class="rotation-wrapper-outer">
                                <div class="rotation-wrapper-inner">
                                    <span>@a.Nome</span>
                                </div>
                            </div>
                        </div>
                    </th>
                }
                @* ----------------------------------------------------------- *@
            </tr>

            @* COMEÇA A CRIAR OS CRUZAMENTOS DE FUNC X ATIVIDADES X TREINAMENTOS *@
            @foreach (var wzXFunc in Model.tblWorkzoneXFuncionario)
            {
                <tr>
                    @* Preenche infos básicas RE, NOME, BU *@
                    <td class="text-style">@wzXFunc.tblFuncionarios.RE</td>
                    <td class="text-style">@wzXFunc.tblFuncionarios.Nome</td>
                    @if (@Model.idBU.Trim() != wzXFunc.tblFuncionarios.idBu_Origem)
                    {
                        <td class="text-style bg-red">@wzXFunc.tblFuncionarios.idBu_Origem</td>
                    }
                    else
                    {
                        <td class="text-style">@wzXFunc.tblFuncionarios.idBu_Origem</td>

                    }

                    @* ----------------------------------------------------------- *@

                    @* COMEÇA A VERIFICAR SE OS TREINAMENTOS POSSUEM AVALIAÇÃO OU NÃO
                        E CRIAM O QUADRADO COM OU SEM AVALIAÇÃO *@
                    @foreach (var trein in (IEnumerable<tblTreinamento>)ViewBag.trainingList)//x3
                    {
                        var idTrainAdded = 0;
                        foreach (var t in trein.tblMatrizFuncXTreinamentoTemp)
                        {

                            @*VERIFICA SE O TREINAMENTO[N] POSSUI AVALIAÇÃO*@
                    if (t.idTreinamento == trein.IdTreinamento
                                    && wzXFunc.idFuncionario == t.tblFuncionarios.idfuncionario)
                    {
                        idTrainAdded = @t.idTreinamento;

                        <td onclick="openModalTrain(@trein.IdTreinamento,@wzXFunc.idFuncionario)" class="text-center">
                            @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                            @if (@t.tblPerfilItens != null)
                            {
                                @t.tblPerfilItens.Sigla
                            }
                        </td>
                        }

                    }
                    if (trein.IdTreinamento != idTrainAdded)
                    {
                        <td onclick="openModalTrain(@trein.IdTreinamento,@wzXFunc.idFuncionario)" class="text-center">
                            @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                        </td>
                        }
                    }

                    @* COMEÇA A VERIFICAR SE AS ATIVIDADES POSSUEM AVALIAÇÃO OU NÃO
                        E CRIAM O QUADRADO COM OU SEM AVALIAÇÃO - DETERMINAM QUAL VAI SER
                        A COR DO QUADRADO COM BASE NOS TREINAMENTOS NECESSÁRIOS PARA CADA ATIVIDADE*@
                    @foreach (var a in (IEnumerable<tblAtividades>)ViewBag.activiesList)
                    {
                        var idActivAdded = 0;

                        // PEGA AS AVALIAÇÕES DA ATIVIDADE[N]
                        foreach (var a2 in a.tblMatrizFuncXAtividadesTemp)
                        {

                            var trainamentosQtd = 0;
                            var avaliacoes = 0;


                            //PEGA OS TREINAMENTOS NECESSÁRIOS PARA A ATIVIDADE[N]
                            foreach (var treinInsideAtiv in a2.tblAtividades.tblAtividadeXTreinamentos)
                            {
                                //PEGA A QUANTIDADE DE TREINAMENTOS NA ATIVIDADE[N]
                                trainamentosQtd = a2.tblAtividades.tblAtividadeXTreinamentos.Count;

                                //treinInsideAtiv.tblTreinamento.tblMatrizFuncXTreinamento
                                //    .Where(w => w.idFuncionario == wzXFunc.idFuncionario && treinInsideAtiv.tblTreinamento.IdTreinamento);
                                foreach (var aval in treinInsideAtiv.tblTreinamento.tblMatrizFuncXTreinamentoTemp)
                                {
                                    if (treinInsideAtiv.idTreinamento == aval.idTreinamento && wzXFunc.idFuncionario == aval.idFuncionario)
                                    {

                                        avaliacoes++;
                                    }
                                }


                            }

                            if (a2.idAtividade == a.idAtividade
                                && wzXFunc.idFuncionario == a2.tblFuncionarios.idfuncionario)
                            {

                                // Verifica se a qtd de trein necessários na ativ[n] é a igual a de avaliações
                                // Se sim ele está apto pra fazer a ativ
                                if (trainamentosQtd == avaliacoes)
                                {
                                    // Verifica se funcionário pertence aquela BU
                                    // Se não classifica como alocação forçada
                                    if (Model.idBU.Trim() != @wzXFunc.tblFuncionarios.idBu_Origem)
                                    {
                                        <td onclick="openModalActiv(@a.idAtividade,@wzXFunc.idFuncionario, true)" id="@a.idAtividade,@wzXFunc.idFuncionario" bgColor="#3fd44a" class="text-center bg-green">
                                            @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                                            @if (@a2.tblPerfilItens != null)
                                            {
                                                @a2.tblPerfilItens.Sigla
                                            }
                                        </td>
                                    }
                                    else
                                    {
                                        <td onclick="openModalActiv(@a.idAtividade,@wzXFunc.idFuncionario, false)" id="@a.idAtividade,@wzXFunc.idFuncionario" bgColor="#3fd44a" class="text-center bg-green">
                                            @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                                            @if (@a2.tblPerfilItens != null)
                                            {
                                                @a2.tblPerfilItens.Sigla
                                            }
                                        </td>
                                    }

                                }
                                else
                                {
                                    // Verifica se funcionário pertence aquela BU
                                    // Se não classifica como alocação forçada
                                    if (Model.idBU.Trim() != @wzXFunc.tblFuncionarios.idBu_Origem)
                                    {
                                        <td onclick="openModalActiv(@a.idAtividade,@wzXFunc.idFuncionario, true)" id="@a.idAtividade,@wzXFunc.idFuncionario" bgcolor="#e46a6a" class="text-center bg-red">
                                            @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                                            @if (@a2.tblPerfilItens != null)
                                            {
                                                @a2.tblPerfilItens.Sigla
                                            }
                                        </td>
                                    }
                                    else
                                    {
                                        <td onclick="openModalActiv(@a.idAtividade,@wzXFunc.idFuncionario, false)" id="@a.idAtividade,@wzXFunc.idFuncionario" bgcolor="#e46a6a" class="text-center bg-red">
                                            @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                                            @if (@a2.tblPerfilItens != null)
                                            {
                                                @a2.tblPerfilItens.Sigla
                                            }
                                        </td>
                                    }


                                }

                                idActivAdded = @a2.idAtividade;
                            }

                        }

                        var avaliacao = 0;
                        foreach (var t in a.tblAtividadeXTreinamentos)
                        {
                            avaliacao += t.tblTreinamento.tblMatrizFuncXTreinamentoTemp.Where(f => f.idFuncionario == wzXFunc.idFuncionario).Count();
                        }

                        if (a.idAtividade != idActivAdded)
                        {
                            if (a.tblAtividadeXTreinamentos.Count == avaliacao)
                            {
                                // Verifica se funcionário pertence aquela BU
                                // Se não classifica como alocação forçada
                                if (Model.idBU.Trim() != @wzXFunc.tblFuncionarios.idBu_Origem)
                                {
                                    <td onclick="openModalActiv(@a.idAtividade,@wzXFunc.idFuncionario, true)" id="@a.idAtividade,@wzXFunc.idFuncionario" bgColor="#3fd44a" class="text-center bg-green">
                                        @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                                    </td>
                                }
                                else
                                {
                                    <td onclick="openModalActiv(@a.idAtividade,@wzXFunc.idFuncionario, false)" id="@a.idAtividade,@wzXFunc.idFuncionario" bgColor="#3fd44a" class="text-center bg-green">
                                        @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                                    </td>
                                }

                            }
                            else
                            {
                                // Verifica se funcionário pertence aquela BU
                                // Se não classifica como alocação forçada
                                if (Model.idBU.Trim() != @wzXFunc.tblFuncionarios.idBu_Origem)
                                {
                                    <td onclick="openModalActiv(@a.idAtividade,@wzXFunc.idFuncionario, true)" id="@a.idAtividade,@wzXFunc.idFuncionario" bgColor="gray" class="text-center bg-gray">
                                        @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                                    </td>
                                }
                                else
                                {
                                    <td onclick="openModalActiv(@a.idAtividade,@wzXFunc.idFuncionario, false)" id="@a.idAtividade,@wzXFunc.idFuncionario" bgColor="gray" class="text-center bg-gray">
                                        @*@trein.IdTreinamento,@wzXFunc.idFuncionario:*@
                                    </td>
                                }

                            }
                        }
                    }
                </tr>
            }
        </tbody>
    </table>

    <div class="row">
        <button class="btn btn-modified-save pull-right" onclick="salvarMatriz(@Model.IdWorkzone)">Salvar</button>
    </div>

    <div id="listTraining">
        @{Html.RenderAction("BuscarITem", "Matrix", new { idTrain = 0, idFuncionario = 0 });}
    </div>

    <div id="listActivity">
        @{Html.RenderAction("BuscarItemAtiv", "Matrix", new { idActivity = 0, idFuncionario = 0 });}
    </div>
</div>


<table class="table table-striped">
    <thead>
        <tr>
            <th>Usuário</th>
            <th>Motivo</th>
            <th>Funcionário</th>
            <th>Atividade</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var w in Model.tblMatrizWorkzoneTemp)
        {
            foreach (var w2 in w.tblMatrizFuncXAtividadesTemp)
            {


                <tr>
                    @if (w2.alocacaoForcada != null)
                    {
                        <td class="text-center">@w.Usuario</td>
                        <td class="text-center">@w2.alocacaoForcada</td>
                        <td class="text-center">@w2.tblFuncionarios.Nome</td>
                        <td class="text-center">@w2.tblAtividades.Nome</td>
                    }
                </tr>
            }
        }
    </tbody>
</table>
